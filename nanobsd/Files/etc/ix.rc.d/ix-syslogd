#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-syslogd
# REQUIRE: zfs
# BEFORE: syslogd

. /etc/rc.subr

generate_syslog_conf()
{
	local IFS="|"
	local f="stg_syslogserver"
	eval local $f
	local sf=$(var_to_sf $f)

	cp /conf/base/etc/syslog.conf /etc/syslog.conf

	${LIBREBSD_SQLITE_CMD} ${LIBREBSD_CONFIG} "
	SELECT
		$sf

	FROM
		system_settings

	ORDER BY
		-id

	LIMIT 1
	" | \
	while eval read -r $f; do
		if [ -n "${stg_syslogserver}" ]; then
			echo -e "*.*\t@${stg_syslogserver}" >> /etc/syslog.conf
		fi
	done
}

ix_syslogd_start()
{
	generate_syslog_conf

	local syslog_volumes="$(zfs list -H|awk '{ print $1 }'|grep -i syslog)"
	if [ -z "${syslog_volumes}" ]
	then
		return 0
	fi

	for sv in ${syslog_volumes}
	do
		zfs list -H|egrep -qw "^${sv}" >/dev/null 2>&1
		if [ "$?" != "0" ]
		then
			continue
		fi

		local bn="$(basename ${sv})"

		echo "${bn}"|egrep -qi '^syslog$' >/dev/null 2>&1
		if [ "$?" = "0" ]
		then
			local mp="$(zfs list -H|egrep -w "^${sv}"|awk '{ print $5 }')"
			if [ -z "${mp}" ]
			then
				break
			fi

			/etc/rc.d/syslogd status >/dev/null 2>&1
			if [ "$?" = "0" ]
			then
				/etc/rc.d/syslogd stop
			fi

			#
			#	log directory exists, pick up any new files or
			#	directories and create them. Existing files will be
			#	appended. This is done this way so that ownership and
			#	permissions are always preserved.
			#
			if [ -d "${mp}/log" ]
			then

				#
				#	Pick up any new directories and sync them
				#
				if [ ! -L /var/log ]; then
					for dir in $(find /var/log/ -type d)
					do
						local dst="${mp}/log/${dir#/var/log/}"

						if [ ! -d "${dst}" ]
						then
							/usr/local/bin/rsync -avz ${dir}/* ${dst}/ >/dev/null 2>&1
						fi
					done
				fi

				#
				#	Find all files that are not a directory and see if
				#	they exist. If the file exists already, append to
				#	it, otherwise, copy it over.
				#
				if [ ! -L /var/log ]; then
					for file in $(find /var/log/ ! -type d)
					do
						local dst="${mp}/log/${file#/var/log/}"

						if [ ! -f "${dst}" ]
						then
							cp -p ${file} ${dst}
						else
							cat ${file} >> ${dst}
						fi
					done
				fi


			#
			#	This is the first time syslog is going to log to this
			#	directory, so create the log directory and sync files.
			#
			else
				mkdir -p ${mp}/log
				chmod 755 ${mp}/log
				chown root:wheel ${mp}/log

				/usr/local/bin/rsync -avz /var/log/* ${mp}/log/ >/dev/null 2>&1
			fi

			mv /var/log /var/.log.old
			ln -s ${mp}/log /var/log

			/etc/rc.d/syslogd restart

			break
		fi
	done

	return 0
}

name="ix-syslogd"
start_cmd='ix_syslogd_start'
stop_cmd=':'
        
load_rc_config $name
run_rc_command "$1"
