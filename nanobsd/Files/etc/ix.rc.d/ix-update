#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-update
# BEFORE: ix-fstab

. /etc/rc.librebsd

readonly UPDATE_FAILED_LOG="/data/update.failed"

db_update_real()
{
	echo "Applying database schema changes"

	yes | /usr/local/bin/python \
	    /usr/local/www/librebsdUI/manage.py migrate --merge --delete-ghost-migrations > \
		$UPDATE_FAILED_LOG 2>&1
	if [ $? -ne 0 ]; then
		echo "manage.py migrate failed"
		return 1
	fi
	rm -f $UPDATE_FAILED_LOG
	return 0
}

handle_error()
{
	local LABELNAME OTHER_PARTNUM PARTNUM TARGET_DRIVE

	echo "Reverting to previous state"

	rm -f $NEED_UPDATE_SENTINEL
	mv ${LIBREBSD_CONFIG}.bak ${LIBREBSD_CONFIG}
	if [ -f $CD_UPGRADE_SENTINEL ]; then
		rm $CD_UPGRADE_SENTINEL
		cat <<EOF
Database upgrade FAILED; check $UPDATE_FAILED_LOG for more details.
Reverting a failed CD upgrade is not totally possible
Rebooting in 15 seconds..
EOF
		umount /data
		sleep 15
		reboot
	fi
	umount /data

	. /etc/nanobsd.conf

	LABELNAME=`echo ${NANO_DRIVE} | cut -f2 -d/`
	if mount | grep ${NANO_DRIVE}s1 > /dev/null ; then
		PARTNUM=1
		OTHER_PARTNUM=2
	else
		PARTNUM=2
		OTHER_PARTNUM=1
	fi
	TARGET_DRIVE=`glabel status | awk '/ufs\/'${LABELNAME}s${PARTNUM}'a/ { print $3; }' | sed -e 's/s.a//'`
	gpart set -a active -i $OTHER_PARTNUM ${TARGET_DRIVE}

	cat <<EOF
Database upgrade FAILED; check $UPDATE_FAILED_LOG for more details.
Rebooting in 15 seconds..
EOF
	sleep 15
	reboot
}

db_update()
{
	if [ ! -f $NEED_UPDATE_SENTINEL ]; then
		# No need to update, exit script and continue boot
		exit 0
	fi
	echo "Saving current ${LIBREBSD_CONFIG} to ${LIBREBSD_CONFIG}.bak"
	cp ${LIBREBSD_CONFIG} ${LIBREBSD_CONFIG}.bak
	if [ -f /data/uploaded.db ]; then
		echo "Moving uploaded config to ${LIBREBSD_CONFIG}"
		mv /data/uploaded.db ${LIBREBSD_CONFIG}
	fi

	set +e
	db_update_real || handle_error
	set -e

	rm -f $NEED_UPDATE_SENTINEL
	rm -f $CD_UPGRADE_SENTINEL

	# Things that need write access to /data can follow this.

	# NOTE: this must be run via the rc.d script, not service(8).
	env AUTOTUNE_REBOOT=false /etc/rc.d/ix-loader start

	echo "Database upgrade complete.  Rebooting."
	cd /
	sleep 2
	reboot
}

name="ix-update"
start_cmd='db_update'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
